#!/bin/bash

savu_version=1.2
conda_env=savu_v1.2
redhatrelease=[eval exec "cat /etc/redhat-release"]
mach=$tcl_platform(machine)
pymajorversion=2.7
ana_version=4.2.13
openmpi_version=1.6.5
cuda_version=7.0
fftw_version=3.3.3
PROMPT={[\u@\h \W]\$ }
astra_lib=lib/python2.7/site-packages/astra/lib

echo "Setting up Savu version $savu_version"

# set cluster related paths
module load global/cluster




if { [module-info mode load] } {
  puts stderr "\tLoading $arch-bit Anaconda Python, version $ana_version"

  # load the default directories
  if { ! [is-loaded global/directories] } {
    module load global/directories
  }



  # load FFTW shared libraries
  if { ! [is-loaded fftw/$fftw_version] } {
    if { [is-loaded fftw] } {
        module unload fftw
    }
    module load fftw/$fftw_version
  }

  # load CUDA shared libraries
  if { ! [is-loaded cuda/$cuda_version] } {
    if { [is-loaded cuda] } {
        module unload cuda
    }
    module load cuda/$cuda_version
  }

  # load openmpi shared libraries
  if { ! [is-loaded openmpi/$openmpi_version] } {
    if { [is-loaded openmpi] } {
        module unload openmpi
    }
    module load openmpi/$openmpi_version
  }

  # load the default directories
  if { ! [is-loaded global/directories] } {
    module load global/directories
  }
} else {
  puts stderr "Unloading $arch-bit Anaconda Python, version $ana_version"
  puts stdout "source deactivate;"

  # unload default directories
  if { [is-loaded global/directories] } {
    module unload global/directories
  }

  # unload FFTW shared libraries
  if { [is-loaded fftw/$fftw_version] } {
    module unload fftw/$fftw_version
  }

  # unload CUDA shared libraries
  if { [is-loaded cuda/$cuda_version] } {
    module unload cuda/$cuda_version
  }

  # unload openmpi shared libraries
  if { [is-loaded openmpi/$openmpi_version] } {
    module unload openmpi/$openmpi_version
  }
  unsetenv CONDA_DEFAULT_ENV
  unsetenv CONDA_PREFIX
  unsetenv CONDA_PS1_BACKUP
  unsetenv PS1 $PROMPT
}

set PYTHON_HOME $env(softwaredir)/savu/anaconda/envs/$conda_env
setenv pythonmajorversion $pymajorversion
prepend-path PATH $PYTHON_HOME/bin
setenv PYTHONNOUSERSITE True
puts stdout "source $PYTHON_HOME/bin/activate $conda_env;"
setenv CONDA_PATH_BACKUP $env(PATH)
prepend-path PATH $PYTHON_HOME/bin
prepend-path LD_LIBRARY_PATH $PYTHON_HOME/$astra_lib

module add fastxrf
#module add ptypy

if { [info exists env(SAVUHOME)] } {
  puts stderr "\n\tSAVUHOME is set to $env(SAVUHOME)\n"
  prepend-path PATH $env(SAVUHOME)
  prepend-path PYTHONPATH $env(SAVUHOME)
  set-alias "savu_mpi_dev" "$env(SAVUHOME)/mpi/dls/savu_launcher_dev.sh"
  set-alias "savu_mpi" "savu_launcher.sh"
  set-alias "savu_config" "python $env(SAVUHOME)/scripts/config_generator/savu_config.py"
  set-alias "savu" "python $env(SAVUHOME)/savu/tomo_recon.py"
} else {
  set-alias "savu_mpi" "savu_launcher.sh"
  set-alias "savu_mpi_preview" "savu_launcher_preview.sh"
  set-alias "savu" "savu -s cs04r-sc-serv-14"
}

